#!/usr/bin/env bash
set -eu -o pipefail

prog=${0##*/}

usage() {
    cat <<EOF
Usage: $prog OPTION...

Checks health of the specified service (hax or Mero).

Options:
  -x, --hax       Check hax service.
  -f, --fid fid   Check Mero service of the specified fid.
  -s, --svc svc   Check another service specified as svc.
  -h, --help      Show this help.
EOF
}

fid=
hax=
svc=

TEMP=$(getopt --options hxf:s: \
              --longoptions help,hax,fid:,svc: \
              --name "$prog" -- "$@" || true)

(($? == 0)) || { usage >&2; exit 1; }

eval set -- "$TEMP"

while true ; do
    case "$1" in
        -h|--help)   usage; exit ;;
        -x|--hax)    hax=yes; shift 1 ;;
        -f|--fid)    fid=$2; shift 2 ;;
        -s|--svc)    svc=$2; shift 2 ;;
        --)          shift; break ;;
        *)           echo 'getopt: internal error...'; exit 1 ;;
    esac
done

[[ -n $fid || -n $hax || -n $svc ]] || { usage >&2; exit 1; }

if [[ $hax ]]; then
    service=hare-hax
elif [[ $fid ]]; then
    service=m0d@$fid
else
    service=$svc
fi

# See https://www.consul.io/docs/agent/checks#check-scripts
declare -A status=(
    [passing]=0
    [warning]=1
    [failing]=2
)

if [[ $service =~ m0d ]]; then
    pass=/tmp/mero-mkfs-pass-$fid
    fail=/tmp/mero-mkfs-fail-$fid

    if [[ -f $pass ]]; then
        rm $pass
        touch $fail
        exit ${status[passing]}
    elif [[ -f $fail ]]; then
        rm $fail
        exit ${status[warning]}
    fi
fi

case $(systemctl is-active $service) in
    active|deactivating)
        exit ${status[passing]};;
    failed)
        exit ${status[failing]};;
    *)
        exit ${status[warning]};;
esac
