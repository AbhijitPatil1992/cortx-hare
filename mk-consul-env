#!/usr/bin/env bash
set -eu -o pipefail
# set -x
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '

PROG=${BASH_SOURCE[0]##*/}
SRC_DIR="$(dirname $(readlink -f ${BASH_SOURCE[0]}))"

ENV_TEMPLATE=$SRC_DIR/systemd/consul-env.in
ENV_FILE=${ENV_TEMPLATE%.in}

usage() {
    cat <<EOF
Usage: $PROG OPTION...

Create $ENV_FILE with Consul agent startup parameters.

Options:
  -m, --mode MODE           MODE is either 'server' or 'client'.
  -b, --bind IP             IP address to bind to.
  -j, --join IP             IP address to join.
  -e, --extra-options STR   Additional options.
  -h, --help                Show this help and exit.
EOF
}

mode=
bind_addr=
join_addr=
extra_opts=

TEMP=$(getopt --options hm:b:j:e: \
              --longoptions help,mode:,bind:,join:,extra-options: \
              --name "$PROG" -- "$@" || true)

(($? == 0)) || { usage >&2; exit 1; }

eval set -- "$TEMP"
while true; do
    case "$1" in
        -h|--help)           usage; exit ;;
        -m|--mode)           mode=$2; shift 2 ;;
        -b|--bind)           bind_addr=$2; shift 2 ;;
        -j|--join)           join_addr=$2; shift 2 ;;
        -e|--extra-options)  extra_opts=$2; shift 2 ;;
        --)                  shift; break ;;
        *)                   echo 'getopt: internal error...'; exit 1 ;;
    esac
done

[[ -n $mode && -n $bind_addr ]] || {
    usage >&2
    exit 1
}

sed -r -e "s/^(MODE).*/\1=$mode/" \
       -e "s/^(BIND).*/\1=$bind_addr/" \
       -e "s/^(CLIENT).*/\1=127.0.0.1 $bind_addr/" $ENV_TEMPLATE >$ENV_FILE

if [[ -n $join_addr ]]; then
    sed -r -e "s/^(JOIN).*/\1=${join_addr:+-retry-join $join_addr}/" \
        -i $ENV_FILE
fi

if [[ -n $extra_opts ]]; then
    sed -r "s/^(EXTRA_OPTS).*/\1=$extra_opts/" -i $ENV_FILE
fi

# Prepare for consul-agent startup:
sudo rm -rf /tmp/consul
cp $SRC_DIR/consul-$mode-conf.json.in $SRC_DIR/consul-$mode-conf.json
