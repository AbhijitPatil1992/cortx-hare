#!/usr/bin/env bash
set -eu -o pipefail

prog=${0##*/}

usage() {
    cat <<EOF
Usage: $prog OPTION...

Checks health of the specified service (hax or Mero).

Options:
  -x, --hax       Check hax service.
  -f, --fid fid   Check Mero service of the specified fid.
  -h, --help      Show this help.
EOF
}

fid=
hax=

TEMP=$(getopt --options hxf: \
              --longoptions help,hax,fid: \
              --name "$prog" -- "$@" || true)

(($? == 0)) || { usage >&2; exit 1; }

eval set -- "$TEMP"

while true ; do
    case "$1" in
        -h|--help)   usage; exit ;;
        -x|--hax)    hax=yes; shift 1 ;;
        -f|--fid)    fid=$2; shift 2 ;;
        --)          shift; break ;;
        *)           echo 'getopt: internal error...'; exit 1 ;;
    esac
done

[[ -n $fid || -n $hax ]] || { usage >&2; exit 1; }

if [[ $hax ]]; then
    service=hax
else
    service=m0d@$fid
fi

if [[ $service =~ m0d ]]; then
    pass=/tmp/mero-mkfs-pass-$fid
    fail=/tmp/mero-mkfs-fail-$fid

    if [[ -f $pass ]]; then
        rm $pass
        touch $fail
        exit 0
    elif [[ -f $fail ]]; then
        rm $fail
        exit 1
    fi
fi

case $(systemctl is-active $service) in
    'active') exit 0;;
    'failed') exit 2;;
    *) exit 1;;
esac
