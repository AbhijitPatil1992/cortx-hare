#!/usr/bin/env bash
set -eu -o pipefail
# set -x
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '

# Install Hare software on the local node.

SRC_DIR="$(dirname $(readlink -f $0))"
M0_SRC_DIR=${M0_SRC_DIR:-${SRC_DIR%/*}/mero}

init_hax() {
    local rebuild_hax=$1

    local env_dir=$SRC_DIR/.env
    python3 -m venv $env_dir
    . $env_dir/bin/activate

    cd $SRC_DIR/hax
    local wheel_file=dist/hax-0.0.1-cp36-cp36m-linux_x86_64.whl
    if ! [[ -f $wheel_file ]] || $rebuild_hax; then
        pip3 install -r requirements.txt
        python3 setup.py flake8 mypy
        python3 setup.py bdist_wheel
    fi
    pip3 install $wheel_file
    cd -
}

create_env_file() {
    export HAX_EXE="$SRC_DIR/.env/bin/hax"
    echo "HAX_EXE=${HAX_EXE}" >$SRC_DIR/systemd/hax-environment
}

install_systemd() {
    sudo mkdir -p /opt/seagate
    sudo mkdir -p /var/mero/hax
    sudo ln -sfn $SRC_DIR /opt/seagate/hare
    sudo cp $SRC_DIR/systemd/*.service /usr/lib/systemd/system/
}

usage() {
    cat <<EOF
Usage: ${0##*/} [OPTION]

Options:
    --rebuild-hax    Build hax even if the wheel file exists
    -h, --help       Show this help message and exit
EOF
}

TEMP=$(getopt --options h --long rebuild-hax,help --name "${0##*/}" -- "$@")
eval set -- "$TEMP"
while true; do
    case "$1" in
        --rebuild-hax)
            rebuild_hax=true;;
        -h|--help)
            usage
            exit 0;;
        --)
            shift
            break;;
        *)
            echo '**ERROR** getopt' >&2
            exit 1;;
    esac
    shift
done

init_hax ${rebuild_hax:-false}
create_env_file
install_systemd

sudo systemctl daemon-reload
