#!/usr/bin/env bash
set -eu -o pipefail
# set -x
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '

# :help: save hare-related logs to archive

PROG=${0##*/}

usage() {
    cat <<EOF
Usage: $PROG [OPTIONS...]

Copy hare logs and save them in <store_path> in archive with <bundle_id> in the name.
Example: <store_path>/hare/hare_<bundle_id>.tar.xz

Default values:
store_path: /tmp/
bundle_id: hostname of current machine

Options:
  -h, --help           Show this help and exit.
  --store_path         Directory to put bundle with logs
  --bundle_id          ID to be specified in archive name
EOF
}

die() {
    echo "$PROG: $*" >&2
    exit 1
}

say() {
    echo -n "$(date '+%F %T'): $*"
}

TEMP=$(getopt --options h \
              --longoptions help,bundle_id:,store_path: \
              --name "$PROG" -- "$@" || true)

(($? == 0)) || { usage >&2; exit 1; }

eval set -- "$TEMP"

bundle_id=${HOSTNAME}
store_path=/tmp

while true; do
    case "$1" in
        -h|--help)           usage; exit ;;
        --bundle_id)         bundle_id=$2; shift 2 ;;
        --store_path)        store_path=$2; shift 2 ;;
        --)                  shift; break ;;
        *)                   break ;;
    esac
done

dest_dir="$store_path/hare/${HOSTNAME}"
archive_file="$store_path/hare/hare_$bundle_id.tar.gz"

mkdir -p "${dest_dir}"

# System logs
sudo journalctl --no-pager --full --utc --boot --output short-precise > "$dest_dir/syslog.txt" || true

# Services status
sudo systemctl --all --full --no-pager status {hare,m0,mero,s3}\* > "$dest_dir/systemctl-status.txt" || true

# Cluster data for primary node
[[ -f /opt/seagate/eos-prvsnr/pillar/components/cluster.sls ]] && cp /opt/seagate/eos-prvsnr/pillar/components/cluster.sls "$dest_dir"
[[ -f /var/lib/hare/cluster.yaml ]] && cp --parents /var/lib/hare/cluster.yaml "$dest_dir"

# Hare logs
cp --parents /var/lib/hare/*.{yaml,json} "$dest_dir" || true
cp -r --parents /var/log/hare/ "$dest_dir" || true

# Archive expected by CMS
tar -C "$store_path/hare/" -czf "$archive_file" ${HOSTNAME}/ || die "Archive operation failed"
rm -rf "$dest_dir"
