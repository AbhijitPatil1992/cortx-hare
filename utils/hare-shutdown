#!/usr/bin/env python3

# :help: stop the cluster

import os
import sys
from socket import gethostname
from typing import Dict, List, NamedTuple

from consul import Consul

Process = NamedTuple('Process', [('node', str), ('name', str), ('fidk', int),
                                 ('status', str)])
CONSUL = 'hare-consul-agent'


def processfid2str(fidk: int) -> str:
    return '{:#x}:{:#x}'.format(ord('r') << 56 | 1, fidk)


def get_kv(cns: Consul, key: str) -> str:
    kv: Dict[str, bytes] = cns.kv.get(key)[1]
    return kv['Value'].decode() if kv and kv['Value'] is not None else ''


def processes_get(cns: Consul) -> List[Process]:
    processes: List[Process] = []
    for node in cns.catalog.nodes()[1]:
        svcs_status = cns.health.node(node['Node'])
        processes.extend(
            Process(node=node['Node'],
                    name=svc['ServiceName'],
                    fidk=int(svc['ServiceID']),
                    status=svc['Status']) for svc in svcs_status[1]
            if svc['ServiceName'])

        processes.append(
            Process(node=node['Node'],
                    name=CONSUL,
                    fidk=0,
                    status=consul_status(node['Node'])))
    return processes


def is_localhost(hostname: str) -> bool:
    name = gethostname()
    return hostname in ('localhost', '127.0.0.1', name, f'{name}.local')


def ssh_prefix(hostname: str) -> str:
    return '' if is_localhost(hostname) else f'ssh {hostname} '


def consul_status(host: str) -> str:
    cmd = ssh_prefix(host) + 'sudo systemctl is-active --quiet ' + CONSUL
    return 'passing' if os.system(cmd) == 0 else 'offline'


def exec(cmd: str) -> None:
    assert cmd
    print('done' if os.system(cmd) == 0 else '**ERROR**')


def process_stop(proc: Process) -> None:
    if proc.status != 'passing':
        return
    if proc.name.startswith('hare-'):
        svc = proc.name
        label = ''
    else:
        svc = 'm0d@' + processfid2str(proc.fidk)
        label = f' ({proc.name})'
    print(f'Stopping {svc}{label} at {proc.node}... ', end='',
          flush=True)
    exec(ssh_prefix(proc.node) + 'sudo systemctl stop --force ' + svc)


def main():
    if consul_status(gethostname()) != 'passing':
        exit('Cluster is not running')

    cns = Consul()
    processes = processes_get(cns)
    leader_node = get_kv(cns, 'leader')

    leader = None
    for svc in ('ios', 'confd', 'hare-hax', CONSUL):
        for proc in processes:
            if proc.name != svc:
                continue
            if svc == CONSUL and proc.node == leader_node:
                leader = proc
                continue
            process_stop(proc)
    assert leader is not None

    process_stop(leader)
    print(f'Killing Consul leader at {leader.node}... ', end='', flush=True)
    exec(ssh_prefix(leader.node) + 'sudo pkill -KILL consul')
    return 0


if __name__ == '__main__':
    sys.exit(main())
