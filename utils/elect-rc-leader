#!/usr/bin/env bash
set -eu -o pipefail

#
# This is the handler for RC Leader election.
#
# It creates the session with confd health check and
# tries to acquire the leader lock with this session.
#
# Use it like this:
#
# $ consul watch -type=key -key leader elect-rc-leader
#

# Redirect all printouts to the log file with the timestamp prefix:
exec &>> /tmp/consul-${0##*/}.log
exec &> >(stdbuf -oL gawk '{ print strftime("%Y-%m-%d %H:%M:%S"), $0 }')

export SRC_DIR="$(dirname $(readlink -f $0))"

get_session_id() {
    consul kv get -detailed leader | awk '/Session/ {print $2}'
}

get_leader_node() {
    curl -sX GET http://localhost:8500/v1/session/info/$(get_session_id) |
        jq -r '.[] | .Node'
}

cleanup() {
    # Nicely stop currently running RC handler (if any):
    pkill -9 -f 'consul watch.*prefix eq' || true
    # Nicely stop currently running RC handler (if any):
    pkill -f 'sh.*proto-rc' || true
}

# If the session is already set - the leader is elected, so
# there is nothing to do (except cleanup after ourself).
get_session_id | grep -q ^- || {
    if [[ $(get_leader_node) != $HOSTNAME ]]; then
        cleanup
    fi
    exit 0
}

cleanup

# Create session with the service:confd Health Checker:
CHECKS_A=($(consul kv get -recurse node/$HOSTNAME | egrep -w 'confd|ha' |
            sed -r 's/.*process.([0-9]+).*/"service:\1"/'))
# See the trick comma separated list explained here:
# https://stackoverflow.com/questions/38625176/store-array-output-to-comma-separated-list-in-bash-scripting
CHECKS=$(IFS=,; echo "[\"serfHealth\", ${CHECKS_A[*]}]")
PAYLD="{\"Name\": \"leader\", \"Checks\": $CHECKS, \"LockDelay\": \"2s\"}"
RES=$(curl -sX PUT -d "$PAYLD" http://localhost:8500/v1/session/create)
SID=$(echo "$RES" | jq -r '.ID' 2>/dev/null || true)

[[ $SID ]] || {
    echo "Session creation failed: $RES" >&2
    exit 0  # don't stop our watch
}

clean_exit() {
    curl -sX PUT http://localhost:8500/v1/session/destroy/$SID &>/dev/null ||
        true
    exit 0
}

# Try to acquire the lock unless it's already acquired by someone else:
while true; do
    get_session_id | grep -q ^- || clean_exit
    sleep $((RANDOM % 10))
    consul kv put -acquire -session=$SID leader `hostname` 2>/dev/null && break
done

# We've got the lock! Start the leader in background:
export SID
(
    # Destroy the session when leader dies:
    trap "curl -sX PUT http://localhost:8500/v1/session/destroy/$SID &>/dev/null" EXIT

    # XXX: notify Mero about new Principal RM here

    # Start EQ watch:
    consul watch -type=keyprefix -prefix eq/ $SRC_DIR/proto-rc
) &
