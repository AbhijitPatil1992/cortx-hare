#!/usr/bin/env bash
set -eu -o pipefail
# set -x
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '

PROG=${0##*/}
SRC_DIR="$(dirname $(readlink -f $0))"

usage() {
    cat <<EOF
Usage: $PROG [--mkfs|--mkfs-only] { -p|--phase 1|2 }

Bootstraps single node after consul agent is started.

The required parameter is one of the following:

  --phase 1 - start confd Mero process(es)
  --phase 2 - start ios Mero process(es)

Options:
  --mkfs-only               Do m0mkfs only (WARNING: wipes Mero data).
  --mkfs                    Do m0mkfs (WARNING: wipes Mero data) and start mero service(s).
  --m0d                     Start mero services only without mkfs.
  -h, --help                Show this help and exit.
EOF
}

do_mkfs=
phase=-

TEMP=$(getopt --options hp: \
              --longoptions help,mkfs,mkfs-only,m0d,phase: \
              --name "$PROG" -- "$@" || true)

(($? == 0)) || { usage >&2; exit 1; }

eval set -- "$TEMP"
while true; do
    case "$1" in
        -h|--help)           usage; exit ;;
        --mkfs)              do_mkfs=mkfs; shift ;;
        --mkfs-only)         do_mkfs=mkfs-only; shift ;;
        -p|--phase)          phase=$2; shift 2 ;;
        --)                  shift; break ;;
        *)                   echo 'getopt: internal error...'; exit 1 ;;
    esac
done

[[ $phase =~ ^phase[12]$ ]] || {
    usage >&2
    exit 1
}

die() {
    >&2 echo "$PROG: $HOSTNAME: $*"
    exit 1
}

# If mero-kernel.service is not installed, the script will fail
# anyway, with or without this check.  The purpose of the check is to
# provide proper error message.
#
# Without this check `sudo systemctl start hare-hax` fails with "Failed to
# start hax.service: Unit not found" error message.  That error
# message is misleading, because hax.service _is_ installed, it is
# one of its dependencies - mero-kernel.service - which isn't.
systemctl list-unit-files | grep -qE '^mero-kernel\.service\>' ||
    die "'mero-kernel' systemd service is not installed"

. update-consul-conf --dry-run  # import CONFD_IDs, IOS_IDs, id2fid()

if [[ -n $CONFD_IDs || -n $IOS_IDs ]]; then
    sudo mkdir -p /var/mero/hax
    sudo systemctl start hare-hax
    count=1
    while ! systemctl is-active hare-hax > /dev/null; do
        (($count < 5)) || die "Failed to start hax service."
        sleep 1
        ((count++))
    done
fi

if [[ -n $CONFD_IDs && $phase == phase1 ]]; then
    [[ -f /var/lib/hare/confd.xc ]] ||
        die 'Cannot bootstrap a server node without /var/lib/hare/confd.xc file'
    sudo cp /var/lib/hare/confd.xc /etc/mero/
fi

if [[ $phase == phase1 ]]; then
    IDs=$CONFD_IDs
else
    IDs=$IOS_IDs
fi

for id in $IDs; do
    fid=$(id2fid $id)
    if [[ $do_mkfs ]]; then
        echo "MERO_NODE_UUID='$(uuidgen --time)'" |
            sudo tee /etc/sysconfig/mero-kernel >/dev/null

        sudo systemctl start mero-mkfs@$fid
        touch /tmp/mero-mkfs-pass-$fid
        # Give time for service check to reset m0mkfs' HA state:
        # (1s * 2) - time of two checks + 1s. (See check-service.)
        sleep 3
    fi

    if [[ $do_mkfs != 'mkfs-only' ]]; then
        sudo systemctl start m0d@$fid
    fi
done
