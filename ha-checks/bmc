#!/usr/bin/env bash
set -eu -o pipefail
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '
# set -x

PROG="${0##*/}"

# XXX Extract this function into some library once it is copied 3 times.
# See https://wiki.c2.com/?ThreeStrikesAndYouRefactor .
log() {
    logger --stderr --tag "check-$PROG" "$@"
}

# XXX ditto
die() {
    log "$@"
    exit 1
}

usage() {
    cat <<EOF
Usage: $PROG --hostname <host> --username <user> --passfile <path>

  --hostname <host>  Remote host name for LAN interface.
  --username <user>  Remote session username.
  --passfile <path>  File with remote session password.
  -h, --help  Show this help and exit.
EOF
}

TEMP=$(getopt --options h \
              --longoptions help,hostname:,username:,passfile: \
              --name "$PROG" -- "$@" || true)
(($? == 0)) || { usage >&2; exit 1; }
eval set -- "$TEMP"

hostname=
username=
passfile=

while true; do
    case "$1" in
        -h|--help) usage; exit;;
        --hostname) hostname=$2; shift 2;;
        --username) username=$2; shift 2;;
        --passfile) passfile=$2; shift 2;;
        --) break;;
        *) die "Unsupported argument: $1";;
    esac
done

if ! [[ -n $hostname && -n $username && -n $passfile ]]; then
    usage >&2
    exit 1
fi

res=$(ipmitool -I lan -H $hostname -U $username -f $passfile \
               chassis power status)
[[ $res == 'Chassis Power is on' ]] || die "Unexpected ipmitool output: $res"
