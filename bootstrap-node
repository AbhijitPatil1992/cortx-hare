#!/usr/bin/env bash
set -eu -o pipefail
# set -x
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '

SRC_DIR="$(dirname $(readlink -f $0))"
prog=${0##*/}

usage() {
    cat <<EOF
Usage: $prog { phase1 | phase2 }

Bootstraps single node after consul agent is started.

The required parameter is one of the following:

  phase1 - start confd Mero process(es)
  phase2 - start ios Mero process(es)
EOF
}

case "$*" in
    phase[12]) ;;
    *) usage >&2; exit 1;;
esac
phase=$1

die() {
    >&2 echo "$prog: $HOSTNAME: $*"
    exit 1
}

# If mero-kernel.service is not installed, the script will fail
# anyway, with or without this check.  The purpose of the check is to
# provide proper error message.
#
# Without this check `sudo systemctl start hax` fails with "Failed to
# start hax.service: Unit not found" error message.  That error
# message is misleading, because hax.service _is_ installed, it is
# one of its dependencies - mero-kernel.service - which isn't.
systemctl list-unit-files | grep -qE '^mero-kernel\.service\>' ||
    die "'mero-kernel' systemd service is not installed"

# If it is a server node, we don't need to update Consul configuration
# two times (once for each phase).  If it is a client node, we should
# update the configuration file on phase2. (There is no phase1 on client
# nodes --- they don't run confd.)
if [[ $phase == phase1 ]]; then
    # XXX We need to pass an empty string (actually, any argument) explicitly,
    # otherwise the sourced file will inherit the value of `$*` from current
    # script and its CLI arguments validation will fail.
    . $SRC_DIR/update-consul-conf ''
else
    . $SRC_DIR/update-consul-conf -n  # do not update, only import variables
    if [[ -z $CONFD_IDs ]]; then
        . $SRC_DIR/update-consul-conf ''  # client node, update
    fi
fi

if [[ -n $CONFD_IDs || -n $IOS_IDs ]]; then
    sudo mkdir -p /var/mero/hax
    sudo systemctl start hax
    count=1
    while ! systemctl is-active hax > /dev/null; do
        (($count < 5)) || die "Failed to start hax service."
        sleep 1
        ((count++))
    done
fi

if [[ -n $CONFD_IDs && $phase == phase1 ]]; then
    [[ -f /tmp/confd.xc ]] ||
        die 'Cannot bootstrap a server node without /tmp/confd.xc file'
    sudo mv /tmp/confd.xc /etc/mero/
fi

if [[ $phase == phase1 ]]; then
    IDs=$CONFD_IDs
else
    IDs=$IOS_IDs
fi

for id in $IDs; do
    fid=$(id2fid $id)
    sudo systemctl start mero-mkfs@$fid
    touch /tmp/mero-mkfs-pass-$fid
    # Give time for service checker to reset m0mkfs' HA state:
    # (1s * 2) - time of two checks + 1s. (See check-service.)
    sleep 3
    sudo systemctl start m0d@$fid
done
