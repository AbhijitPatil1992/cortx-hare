#!/usr/bin/env bash
set -eu -o pipefail
# set -x
export PS4='+ [${FUNCNAME[0]:+${FUNCNAME[0]}:}${LINENO}] '

SRC_DIR="$(dirname $(readlink -f $0))"
prog=${0##*/}

usage() {
    >&2 cat <<EOF
Usage: $prog <phase1|phase2)>

Bootstraps single node after consul agent is started.

  phase1 - starts up confd Mero process(es).
  phase2 - starts up ios Mero process(es).
EOF
    exit 1
}

(($# == 1)) || usage

phase=$1

[[ $phase =~ phase[12] ]] || usage

die() {
    >&2 echo "$prog: $HOSTNAME: $*"
    exit 1
}

# Check if Mero is installed.
sudo systemctl list-units 'mero-kernel*' > /dev/null ||
    die 'No `mero-kernel` systemd service'

# If it is a server node - we don't need to update the configuration
# twice on both phases. But if it is a client node - we should update
# the configuration on phase2. (There is no phase1 on client nodes -
# they don't run confd).
if [[ $phase == phase1 ]]; then
    . $SRC_DIR/update-consul-conf
else
    . $SRC_DIR/update-consul-conf -n #Â Don't update, just set vars.
    if [[ -z $CONFD_IDs ]]; then
        . $SRC_DIR/update-consul-conf # Client node, update.
    fi
fi

if [[ -n $CONFD_IDs || -n $IOS_IDs ]]; then
    sudo systemctl start hax
fi

if [[ -n $CONFD_IDs && $phase == phase1 ]]; then
    [[ -f /tmp/confd.xc ]] || {
        die "Can not bootstrap server node without confd.xc file."
    }
    sudo mv /tmp/confd.xc /etc/mero/
fi

if [[ $phase == phase1 ]]; then
    IDs=$CONFD_IDs
else
    IDs=$IOS_IDs
fi

for id in $IDs; do
    fid=$(id2fid $id)
    sudo systemctl start mero-mkfs@$fid
    sudo systemctl start m0d@$fid
done
